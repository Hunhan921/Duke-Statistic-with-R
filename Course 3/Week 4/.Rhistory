#load("movies.Rdata")
library(ggplot2)
library(dplyr)
library(statsr)
data(movies)
load("movies.Rdata")
View(movies)
summary(movies)
summary(movies)
summary(movies$imdb_num_votes)
hist(movies$imdb_num_votes)
summary(movies$audience_score)
hist(movies$audience_score)
summary(movies$imdb_rating)
hist(movies$imdb_rating)
?geom_jitter
summary(movies$imdb_rating)
hist(movies$imdb_rating)
hist(movies$audience_score)
summary(movies$audience_score)
hist(movies$audience_score)
ggplot(data = movies, aes(y=audience_score, x=critics_score))+
geom_point()
ggplot(data = movies, aes(y=audience_score, x=critics_score))+
geom_jitter()+
geom_smooth(method = "lm")
movies %>%
summarise(cor(audience_score, critics_score))
ggplot(data = movies, aes(y=audience_score, x=critics_score))+
geom_jitter()+
geom_smooth(method = "lm")
movies %>%
summarise(cor(audience_score, critics_score))
?ggpairs
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
?ggpairs
ggpairs(movies, columns = c(3,5,13,16,20,21,22,23))
ggpairs(movies, columns = c(3,5,13,16,20,21,22,23))
ggpairs(movies, columns = c(13,16))
ggpairs(movies, columns = c(13,16))
ggpairs(movies, columns = c(13,16))
mlr <- lm(data = movies, audience_score ~ critics_score + genre + mpaa_rating + imdb_rating +
best_pic_win + best_actor_win + best_actress_win + best_dir_win)
summary(mlr)
View(mlr)
plot(mlr$residuals~mlr$fitted.values)
qqnorm(mlr$residuals)
#best_pic_win had the highest p value in the 1st model
mlr <- lm(data = movies, audience_score ~ critics_score + genre + mpaa_rating + imdb_rating +
best_actor_win + best_actress_win + best_dir_win)
summary(mlr)
mlr <- lm(data = movies, audience_score ~ critics_score + genre + imdb_rating +
best_actor_win + best_actress_win + best_dir_win)
summary(mlr)
mlr <- lm(data = movies, audience_score ~ critics_score + genre + imdb_rating + best_actor_win +
best_actress_win)
summary(mlr)
mlr <- lm(data = movies, audience_score ~ critics_score + genre + imdb_rating + best_actress_win)
summary(mlr)
mlr <- lm(data = movies, audience_score ~ critics_score + genre + imdb_rating)
summary(mlr)
mlr <- lm(data = movies, audience_score ~ critics_score + genre)
summary(mlr)
plot(mlr$residuals~mlr$fitted.values)
qqnorm(mlr$residuals)
tables(movies$genre)
table(movies$genre)
movies <- movies %>%
sort(title)
movies <- movies %>% sort(title, decreasing = FALSE)
View(movies)
dangal <- data.frame(critics_score = 88, genre = "Drama")
predict(mlr, dangal, interval = "prediction", level = 0.95)
